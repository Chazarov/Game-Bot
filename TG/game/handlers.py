import asyncio
import os
import time

from aiogram import F, types, Router, Dispatcher
from aiogram.filters import Command, StateFilter
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import FSInputFile, InputMediaPhoto
from aiogram.fsm.context import FSMContext

from crypto_pay_api_sdk import cryptopay

from sqlalchemy.ext.asyncio import AsyncSession

from Database import orm_query
from Database.models import USER_STATES
from TG import system_parametrs

from Game.TTT import strings
from Game.TTT import game

from TG.game.filters import CurrentGameFilter


from TG.game.TicTacToe.kbds import ttt_game_buttons, TTT_game_callback_data
from TG.game.TicTacToe.handlers import start_game #–í—ã–Ω–µ—Å—Ç–∏ –≤ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∏–≥—Ä—ã
from TG.pay.kbds import check_pay
from TG.pay.utils import getInv, getPayUrl

from TG.game.TicTacToe.handlers import router as TTT_router
from TG.game.Durak.handlers import router as Durak_router




class Game_states(StatesGroup):
    Find_game = State()
    In_game = State()




    
router = Router()
router.include_router(TTT_router)
router.include_router(Durak_router)

Crypto = cryptopay.Crypto(token=os.getenv("CRYPTO_TOKEN"), testnet=False)




async def delete_menu(callback:types.CallbackQuery):
    await callback.message.delete()

# –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–æ–≤ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º:  
#
#    ‚Ññ1 - –ü–æ–∏—Å–∫ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ 
# –ò–≥—Ä–æ–∫—É (–æ–±—ä–µ–∫—Ç User –≤ Database.models) –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç—Å—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ WAITING_FOR_A_GAME –∏ –ø–æ–ª—é find_game_parametrs - –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∏–º –∏–≥—Ä—ã.
# –î–∞–ª–µ–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º WAITING_FOR_A_GAME –∏ –∏–¥–µ–Ω—Ç–∏—á–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∏–≥—Ä—ã.
# –ï—Å–ª–∏ —Ç–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω - —Å–æ–∑–¥–∞–µ—Ç—Å—è "–õ–æ–±–±–∏" (–¥–∞–ª–µ–µ –±—É–¥–µ—Ç —É–ø–æ–º–∏–Ω–∞—Ç—å—Å—è –∫–∞–∫ –ö–æ–º–Ω–∞—Ç–∞) (–æ–±—ä–µ–∫—Ç TTT_lobbi –≤ Database.models), –≥–¥–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
# (id –æ–±–æ–∏—Ö –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–æ–≤, id —Å–æ–æ–±—â–µ–Ω–∏–π - –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç —è–≤–ª—è—Ç—å—Å—è –ø–æ–ª–µ–º –¥–ª—è –∏–≥—Ä—ã —É –æ–±–æ–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π).
#
# –ü—Ä–∏ —ç—Ç–æ–º –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Å –ø–æ–∏—Å–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º WAITING_FOR_A_GAME –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ–∏—Å–∫ –∫–æ–º–Ω–∞—Ç—ã, –≤ –∫–æ—Ç–æ—Ä—É—é –ø—Ä–∏–≥–ª–∞—à–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–ï—Å–ª–∏ –≤ –∫–∞–∫–æ–π-—Ç–æ –∫–æ–º–Ω–∞—Ç–µ —É–∫–∞–∑–∞–Ω id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ guest_id),
# –∑–Ω–∞—á–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å–∞–º –±—ã–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω –≤ –ª–æ–±–±–∏ –∏ –ø–æ–∏—Å–∫ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è.
#
# –î–∞–ª–µ–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–≥—Ä—ã (—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∞–ª–µ–µ –≤ —ç—Ç–æ–º –∫–æ–¥–µ ‚Ññ2). 
async def start_game(callback:types.CallbackQuery, callback_data:TTT_game_callback_data, state:FSMContext, session:AsyncSession):

    
    
    message = callback.message
    chat_id = callback.from_user.id
    bot = message.bot
    is_creator:bool
    game_parametrs = game.make_game_parametrs(n = callback_data.n, m = callback_data.m, win_score = callback_data.win_score, bet = callback_data.bet)

    user = await orm_query.get_user_by_id(session=session, user_id=callback.from_user.id)
    if user.balance < callback_data.bet:
        await callback.message.delete()
        await callback.answer("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –∏–≥—Ä—ã, –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å")
        pay = Crypto.createInvoice("USDT", str(callback_data.bet), params={"description": "–û–ø–ª–∞—Ç–∞ –∏–≥—Ä—ã", "expires_in": 60})

        invoiceID = getInv(str(pay))
        URL = getPayUrl(str(pay))

        # await message.answer(f"–°—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É: {URL}",parse_mode='HTML', reply_markup=check_pay(invoiceID))

        await message.answer_photo(FSInputFile('Sourses/icon/icon1.png'), caption=f"üí≥ –û–ø–ª–∞—Ç–∞ –∏–≥—Ä—ã\n\n"
                                                                                  f"–í–∞—à –∞–π–¥–∏: <code>{str(message.from_user.id)}</code>\n"
                                                                                  f"ID –∑–∞–∫–∞–∑–∞: <b>{invoiceID}</b>\n"
                                                                                  f"–°—É–º–º–∞: <b>{callback_data.bet} USDT</b>",
                                   parse_mode='HTML', reply_markup=check_pay(invoiceID, URL))
    else:

        await state.set_state(Game_states.Find_game)
        
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ–∂–∏–¥–∞–Ω–∏–µ –∏–≥—Ä—ã —Å –∑–∞–¥–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        await orm_query.set_user_state(session = session, user_id = chat_id, state = USER_STATES.WAITING_FOR_A_GAME, find_game_parametrs = game_parametrs)
        send_message = await message.answer(text = \
                f"–ò–¥–µ—Ç –ø–æ–∏—Å–∫ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞\n"+\
                f"–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è: {0}\n"
                f"|                 \n")
        message_id = send_message.message_id
        await delete_menu(callback = callback)

        timer_start = time.time()
        waiting_time = 0
        bar_count = 0
        opponent = None
        lobbi = None
        bar = "‚ö´Ô∏è"
        while(1):
            bar_count+=1
            waiting_time = int(time.time() - timer_start)

            if(bar_count > 3): bar_count = 0

            await bot.edit_message_text(text = \
                f"–ò–¥–µ—Ç –ø–æ–∏—Å–∫ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞\n"+\
                f"–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è: {waiting_time}\n"
                f"|    {bar*bar_count}              \n", chat_id = chat_id, message_id = message_id)

            #–ß—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞ –æ–¥–Ω—É —Å–µ–∫—É–Ω–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ –∫–æ–º–Ω–∞—Ç—É –∏ –ø–æ–∏—Å–∫ –∏–≥—Ä–æ–∫–∞ –¥–ª—è 
            # –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥—è—Ç—Å—è –Ω–µ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –∞ –∫–∞–∂–¥—ã–µ WAITING_UPDATE_TIME (—Å–º–æ—Ç—Ä–µ—Ç—å —ç—Ç—É –≤–µ–ª–∏—á–∏–Ω—É –≤ system_parametrs)
            if(waiting_time%system_parametrs.WAITING_UPDATE_TIME == 0):
                lobbi = await orm_query.get_lobbi_by_invitation(session = session, guest_id = chat_id)
                if(lobbi != None): break
                opponent = await orm_query.get_user_who_want_to_play(session = session, ignore_user_id = chat_id, game_params = game_parametrs)
                if(opponent != None): break

            if(time.time() - timer_start > system_parametrs.MAXIMUM_WAITING_TIME): break
            await asyncio.sleep(1)

        await orm_query.set_user_state(session = session, user_id = chat_id, state = USER_STATES.IN_GAME)
        await state.set_state(Game_states.In_game)

        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∏ –æ—à–∏–±–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è –¥–≤—É—Ö –∫–æ–º–Ω–∞—Ç(lobbi) —Å –æ–¥–Ω–∏–º –∏ —Ç–µ–º –∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
            # (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω –≤ –∫–æ–º–Ω–∞—Ç—É –¥—Ä—É–≥–æ–≥–æ –∏–≥—Ä–æ–∫–∞, –ø–æ–∫–∞ –¥–ª—è –Ω–µ–≥–æ —Å–æ–∑–¥–∞–≤–∞–ª–∞—Å—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞)
            another_lobbi = await orm_query.get_lobbi_by_invitation(session = session, guest_id = chat_id)
            if(another_lobbi != None):
                letter = strings.SYMBOL_O
                lobbi = another_lobbi

            letter = ""#‚ùå –∏–ª–∏ ‚≠ï –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ , –∑–∞ –∫–æ–≥–æ –±—É–¥–µ—Ç –∏–≥—Ä–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            if(lobbi != None):
                is_creator = False
                letter = strings.SYMBOL_O

                opponent_id = lobbi.creator_id
                opponent = await orm_query.get_user_by_id(session = session, user_id = opponent_id)

            elif(opponent != None):
                is_creator = True
                letter = strings.SYMBOL_X

                lobbi = await orm_query.create_lobbi(session = session, creator_id = chat_id, guest_id = opponent.id)

            else:
                await orm_query.set_user_state(session = session, user_id = chat_id, state = USER_STATES.NOT_ACTIVE)
                return await bot.edit_message_text(text = f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –ª–æ–±–±–∏ —Å–µ–π—á–∞—Å –Ω–µ—Ç –∏–≥—Ä–æ–∫–æ–≤ üò¢\n–ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ", chat_id = chat_id, message_id = message_id)


            op_tag = opponent.tag
            if(op_tag == None): op_tag = ""
            else: op_tag = "@" + op_tag

            await bot.edit_message_text(text = f"–í–∞—à –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫: {opponent.name}  {op_tag}", chat_id = chat_id, message_id = message_id)
            send_message = await message.answer("...")

            if(not is_creator):
                await orm_query.add_in_lobbi_guest_field_message_id(session = session, lobbi_id = lobbi.id, field_message_id = send_message.message_id)
            else:
                await orm_query.add_in_lobbi_creator_field_message_id(session = session, lobbi_id = lobbi.id, field_message_id = send_message.message_id)


            opponent_field_message_id = None
            try_count = 0
            #    ‚Ññ2 - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–≥—Ä—ã
            # –ü—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –∫–æ–º–Ω–∞—Ç–µ:
            # creator_field_message_id –∏ guest_field_message_id - id —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç —Å–ª—É–∂–∏—Ç—å –ø–æ–ª–µ–º –¥–ª—è –∏–≥—Ä—ã.
            # –î–∞–Ω–Ω—ã–µ, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–ª—è –∏–≥—Ä–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞, —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º:
            #
            #     1) –í –æ–±—ä–µ–∫—Ç–µ –∫–æ–º–Ω–∞—Ç—ã (–±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö):
            # –ø–æ–ª–µ (—Ç–∞–∫ –∫–∞–∫ –≤ –æ–±—ä–µ–∫—Ç–∞—Ö, –Ω–∞—Å–ª–µ–¥—É–µ–º—ã—Ö –æ—Ç Callback_data, –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ).
            #     2) –í –¥–∞–Ω–Ω—ã—Ö –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π (FSMcontest) (–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å FSM):
            # id –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞,
            # id —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ —è–≤–ª—è–µ—Ç—Å—è –∏–≥—Ä–æ–≤—ã–º –ø–æ–ª–µ–º —É –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞,
            # letter - –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç, –∑–∞ –∫–æ–≥–æ –∏–≥—Ä–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (‚ùå –∏–ª–∏ ‚≠ï).
            #     3) –í –æ–±—ä–µ–∫—Ç–µ –∫–ª–∞—Å—Å–∞ Callback_data (TTT_game_callback_data, —Å–º. –≤ TG/game/kbds) (–¥–∞–Ω–Ω—ã–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏, –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –±–æ—Ç–æ–º):
            # id –∫–æ–º–Ω–∞—Ç—ã –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –Ω–µ–π —á–µ—Ä–µ–∑ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö,
            # —Ä–∞–∑–º–µ—Ä —Å—Ç–∞–≤–∫–∏ (–¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ –æ–Ω —Ç–∞–∫–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –≤ –æ–±—ä–µ–∫—Ç–µ lobbi),
            # —Ä–∞–∑–º–µ—Ä—ã –ø–æ–ª—è,
            # –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–ª–µ—Ç–∫–∏ X –∏ Y, –≤ –∫–æ—Ç–æ—Ä—É—é —Å—Ö–æ–¥–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å,
            # –∏ win_score - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Ä—è–¥, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —Å–æ–±—Ä–∞—Ç—å –¥–ª—è –ø–æ–±–µ–¥—ã.
            # –≠—Ç–∏ –¥–∞–Ω–Ω—ã–µ —Ç–∞–∫–∂–µ –µ—Å—Ç—å –≤ –æ–±—ä–µ–∫—Ç–µ User –≤ –ø–æ–ª–µ game_params - –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∏–≥—Ä–∞–µ—Ç –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç, —Ç–æ –æ–Ω–æ —Ä–∞–≤–Ω–æ None).
            # –û–Ω–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–∞–º, –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–¥—Ö–æ–¥—è—â–µ–π –∏–≥—Ä—ã 

            while(opponent_field_message_id == None):
                lobbi = await orm_query.get_lobbi_by_id(session = session, lobbi_id = lobbi.id)
                await session.refresh(lobbi) # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
                if(is_creator):
                    opponent_field_message_id = lobbi.guest_field_message_id
                    opponent_id = lobbi.guest_id
                else:
                    opponent_field_message_id = lobbi.creator_field_message_id
                    opponent_id = lobbi.creator_id

                try_count += 1
                await asyncio.sleep(system_parametrs.WAITING_UPDATE_TIME)
                if(try_count > system_parametrs.MAXIMUM_TRY_COUNT):
                    await state.clear()
                    await orm_query.set_user_state(session = session, user_id = chat_id, state = USER_STATES.NOT_ACTIVE)
                    await orm_query.close_lobbi(session = session, lobbi_id = lobbi.id)
                    return await bot.edit_message_text(text = f"–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –∏–≥—Ä–æ–∫–æ–º –Ω–µ —Å–æ—Å—Ç–æ—è–ª–æ—Å—å(\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑", chat_id = chat_id, message_id = send_message.message_id)

            field = f"{strings.SYMBOL_UNDEF}" * callback_data.n*callback_data.m

            await state.update_data(letter = letter)
            await state.update_data(opponent_field_message_id = opponent_field_message_id)
            await state.update_data(opponent_id = opponent_id)
            await orm_query.set_field_in_lobbi(session = session, lobbi = lobbi, field = field)
            callback_data.lobbi_id = lobbi.id
            await bot.edit_message_text(text = f"–í—ã –∏–≥—Ä–∞–µ—Ç–µ –∑–∞ {letter}", reply_markup = ttt_game_buttons(callback_data = callback_data, field = field), chat_id = chat_id, message_id = send_message.message_id)

        except Exception as e:
            print(e)
            if(lobbi != None):
                await orm_query.close_lobbi(session = session, lobbi_id = lobbi.id)
            await state.clear()
            await orm_query.set_user_state(session = session, user_id = chat_id, state = USER_STATES.NOT_ACTIVE)
            return await bot.edit_message_text(text = f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ", chat_id = chat_id, message_id = send_message.message_id)




router.callback_query.register(start_game, TTT_game_callback_data.filter(), StateFilter(None))